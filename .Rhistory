types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in
}
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
str(zse_df)
?as.Date
types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in$datum.uvrstenja <- as.date(as.character(df_in$datum.uvrstenja),format="%d.%m.%Y")
df_in
}
zse_df <- types_adjust(zse_df)
types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in$datum.uvrstenja <- as.Date(as.character(df_in$datum.uvrstenja),format="%d.%m.%Y")
df_in
}
zse_df <- types_adjust(zse_df)
str(zse_df)
zse_df$simbol[250]
zse_df$simbol[1]
library(gcookbook)
library(ggplot2)
library(dplyr)
library(plyr)
library(dplyr)
library(rvest)
library(stringr)
scrap_f <- function(url) {
table_no <- 1
# read in the html page
html_in <- read_html(url)
# isolate the tablee
html_in_tables <- html_nodes(html_in, xpath = "//table[@id='dnevna_trgovanja']")
# extract the table to a data frame
html_table(html_in_tables[[1]])
}
table_transform <- function(table_in) {
aux1_v <- vector()
for (i in 1:length(table_in)) {
aux1_v <- append(aux1_v, table_in[[i]][1])
}
aux2_v <- vector()
for (i in 2:NROW(table_in)) {
for (j in 1:length(table_in)) {
aux2_v <- append(aux2_v, table_in[[j]][i])
}
}
as.data.frame(matrix(aux2_v, (NROW(table_in) - 1), length(table_in), byrow = TRUE))
}
names_adjust <- function(table_in, df_in) {
aux_v <- vector()
for (i in 1:length(table_in)) {
aux_v <- append(aux_v, table_in[[i]][1])
}
aux_v <- tolower(aux_v)
aux_v <- str_replace_all(aux_v, " ", ".")
aux_v <- str_replace_all(aux_v, "Å¡", "s")
colnames(df_in) <- aux_v
rownames(df_in) <- as.character(levels(df_in[[1]]))
df_in
}
types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in$datum.uvrstenja <- as.Date(as.character(df_in$datum.uvrstenja),format="%d.%m.%Y")
df_in
}
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
?formatC
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in$datum.uvrstenja <- as.Date(as.character(df_in$datum.uvrstenja),format="%d.%m.%Y")
df_in$datum.uvrstenja <- format(df_in$datum.uvrstenja, "%d-%m-%Y")
df_in
}
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
str(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
?format
shiny::runApp('Projekti/dev/alter_finance')
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
library(rvest)
library(stringr)
scrap_f <- function(url) {
table_no <- 1
# read in the html page
html_in <- read_html(url)
# isolate the tablee
html_in_tables <- html_nodes(html_in, xpath = "//table[@id='dnevna_trgovanja']")
# extract the table to a data frame
html_table(html_in_tables[[1]])
}
table_transform <- function(table_in) {
aux1_v <- vector()
for (i in 1:length(table_in)) {
aux1_v <- append(aux1_v, table_in[[i]][1])
}
aux2_v <- vector()
for (i in 2:NROW(table_in)) {
for (j in 1:length(table_in)) {
aux2_v <- append(aux2_v, table_in[[j]][i])
}
}
as.data.frame(matrix(aux2_v, (NROW(table_in) - 1), length(table_in), byrow = TRUE))
}
names_adjust <- function(table_in, df_in) {
aux_v <- vector()
for (i in 1:length(table_in)) {
aux_v <- append(aux_v, table_in[[i]][1])
}
aux_v <- tolower(aux_v)
aux_v <- str_replace_all(aux_v, " ", ".")
aux_v <- str_replace_all(aux_v, "Å¡", "s")
colnames(df_in) <- aux_v
rownames(df_in) <- as.character(levels(df_in[[1]]))
df_in
}
types_adjust <- function(df_in) {
df_in$izdavatelj <- as.character(df_in$izdavatelj)
df_in$broj.izdanih <- gsub(".", "", df_in$broj.izdanih, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$broj.izdanih <- as.numeric(df_in$broj.izdanih)
df_in$nominala <- gsub(".", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(",", ".", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub(" ", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("-", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("HRK", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("EUR", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- gsub("DEM", "", df_in$nominala, ignore.case = FALSE, perl = FALSE, fixed = TRUE, useBytes = FALSE)
df_in$nominala <- as.numeric(df_in$nominala)
detect_hrk <- str_detect(zse_df$nominala, fixed("HRK"))
detect_eur <- str_detect(zse_df$nominala, fixed("EUR"))
detect_dem <- str_detect(zse_df$nominala, fixed("DEM"))
df_in$valuta <- df_in$izdavatelj
df_in$valuta[detect_hrk] <- "HRK"
df_in$valuta[detect_eur] <- "EUR"
df_in$valuta[detect_dem] <- "DEM"
df_in$valuta[!detect_hrk & !detect_eur & !detect_dem] <- NA
df_in$valuta <- as.factor(df_in$valuta)
df_in$datum.uvrstenja <- as.Date(as.character(df_in$datum.uvrstenja),format="%d.%m.%Y")
df_in$datum.uvrstenja <- format(df_in$datum.uvrstenja, "%d-%m-%Y")
df_in
}
zse_table <- scrap_f("http://zse.hr/default.aspx?id=26472")
zse_df <- table_transform(zse_table)
zse_df <- names_adjust(zse_table, zse_df)
zse_df <- types_adjust(zse_df)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
library(DT)
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
shiny::runApp('Projekti/dev/alter_finance')
DT::datatable(iris)
datatable(iris, options = list(
searching = FALSE,
pageLength = 5,
lengthMenu = c(5, 10, 15, 20)
))
library(DT)
m = cbind(matrix(rnorm(60, 1e5, 1e6), 20), runif(20), rnorm(20, 100))
m[, 1:3] = round(m[, 1:3])
m[, 4:5] = round(m[, 4:5], 7)
colnames(m) = head(LETTERS, ncol(m))
head(m)
datatable(m) %>% formatCurrency(c('A', 'C')) %>% formatPercentage('D', 2)
datatable(m) %>% formatCurrency(c('A', 'C'), currency = "HRK") %>% formatPercentage('D', 2)
datatable(m) %>% formatCurrency(c('A', 'C')) %>% formatPercentage('D', 2)
datatable(iris, options = list(pageLength = 5)) %>%
formatStyle('Sepal.Length',  color = 'red', backgroundColor = 'orange', fontWeight = 'bold')
datatable(iris) %>%
formatStyle('Sepal.Length', fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
'Sepal.Width',
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
'Petal.Length',
background = styleColorBar(iris$Petal.Length, 'steelblue'),
backgroundSize = '100% 90%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center'
) %>%
formatStyle(
'Species',
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(iris$Species), c('lightblue', 'lightgreen', 'lightpink')
)
)
datatable(iris) %>%
formatStyle('Sepal.Length', fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
'Sepal.Width',
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
'Petal.Length',
background = styleColorBar(iris$Petal.Length, 'steelblue'),
backgroundSize = '100% 90%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'left',
) %>%
formatStyle(
'Species',
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(iris$Species), c('lightblue', 'lightgreen', 'lightpink')
)
)
library(RMySQL)
q()
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;")
result
dbDisconnect(ucscDb);
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
dbDisconnect(ucscDb);
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
dbDisconnect(ucscDb);
library(swirl)
install_from_swirl("Getting and Cleaning Data")
q()
library(swirl)
swirl()
q)()
q()
?Comparison
library(dplyr)
?group_by
?summarize
library(tidyr)
?gather
library(tidyr)
?gather
?spread
?unique
?separate
?gather
library(lubridate)
?now
?with_tz
?new_interval
library(gcookbook)
tophit <- tophitters2001[1:25, ]
library(ggplot2)
ggplot(tophit, aes(x = avg, y = name)) + geom_point()
ggplot(tophit, aes(x = avg, y = reorder(name, avg))) +
geom_point(size = 3) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed"))
ggplot(tophit, aes(x = reorder(name, avg), y = avg)) +
geom_point(size = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed"))
nameorder <- tophit$name[order(tophit$lg, tophit$avg)]
tophit$name <- factor(tophit$name, levels = nameorder)
ggplot(tophit, aes(x = avg, y = name)) +
geom_segment(aes(yend = name), xend = 0, colour = "grey50") +
geom_point(size = 3, aes(colour = lg)) +
scale_color_brewer(palette = "Set1", limits = c("NL", "AL")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
legend.position = c(1, 0.55),
legend.justification = c(1, 0.5))
ggplot(BOD, aes(x = Time, y = demand)) + geom_line()
BOD1 <- BOD
BOD1$Time <- factor(BOD1$Time)
ggplot(BOD, aes(x = Time, y = demand, group = 1)) + geom_line()
ggplot(BOD, aes(x = Time, y = demand, group = 1)) + geom_line()
ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + ylim(0, max(BOD$demand))
ggplot(BOD1, aes(x = Time, y = demand, group = 1)) + geom_line()
ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + expand_limits(y = 0)
ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + geom_point()
ggplot(worldpop, aes(x = Year, y = Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x = Year, y = Population)) + geom_line() + geom_point() + scale_y_log10()
library(plyr)
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length = mean(len))
ggplot(tg, aes(x = dose, y = length, color = supp)) + geom_line()
ggplot(tg, aes(x = dose, y = length, linetype = supp)) + geom_line()
ggplot(tg, aes(x = factor(dose), y = length, colour = supp, group = supp)) + geom_line()
ggplot(tg, aes(x = dose, y = length, shape = supp)) +
geom_line() +
geom_point(size = 4)
ggplot(tg, aes(x = dose, y = length, fill = supp)) +
geom_line() +
geom_point(size = 4, shape = 21)
library(gcookbook)
library(ggplot2)
ggplot(BOD, aes(x = Time, y = demand)) +
geom_line(linetype = "dashed", colour = "blue")
library(plyr)
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length = mean(len))
ggplot(tg, aes(x = dose, y = length, colour = supp)) + geom_line() +
scale_color_brewer(palette = "Set1")
ggplot(tg, aes(x = dose, y = length, group = supp)) +
geom_line(colour = "darkgreen", size = 1.5)
ggplot(tg, aes(x = dose, y = length, colour = supp)) +
geom_line(linetype = "dashed") +
geom_point(shape = 22, size = 3, fill = "white")
library(gcookbook)
library(ggplot2)
ggplot(heightweight, aes(x = ageYear, y = heightIn, shape = sex)) +
geom_point(size = 3)
ggplot(heightweight, aes(x = ageYear, y = heightIn, shape = sex)) +
geom_point(size = 3) +
scale_shape_manual(values = c(1, 4))
hw <- heightweight
hw$weightgroup <- cut(hw$weightLb, breaks = c(-Inf, 100, Inf),
labels = c("< 100", ">= 100"))
ggplot(hw, aes(x = ageYear, y = heightIn, shape = sex, fill = weigthGroup)) +
geom_point(size = 2.5) +
scale_shape_manual(values = c(21, 24)) +
scale_fill_manual(values = c(NA, "black"),
gudie = guide_legend(override.aes = list(shape = 21)))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black"),
guide=guide_legend(override.aes=list(shape=21)))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightgroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black"),
guide=guide_legend(override.aes=list(shape=21)))
ggplot(heightweight, aes(x = ageYear, y = heightIn, colour = weightLb)) +
geom_point()
ggplot(heightweight, aes(x = ageYear, y = heightIn, size = weightLb)) +
geom_point()
ggplot(heightweight, aes(x = weightLb, y = heightIn, fill = ageYear)) +
geom_point(shape = 21, size = 2.5) +
scale_fill_gradient(low = "black", high = "white")
ggplot(heightweight, aes(x = weightLb, y = heightIn, fill = ageYear)) +
geom_point(shape = 21, size = 2.5) +
scale_fill_gradient(low = "black", high = "white",
breaks = 12:17,
guide = guide_legend())
ggplot(heightweight, aes(x = ageYear, y = heightIn,
size = weightLb,
colour = sex)) +
geom_point(alpha = .5) +
scale_size_area() +
scale_color_brewer(palette = "Set1")
setwd("~/Projekti/dev/human_activity_recognition")
